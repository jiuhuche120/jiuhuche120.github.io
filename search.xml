<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>for和foreach的区别</title>
      <link href="2020/11/28/for%E5%92%8Cforeach%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2020/11/28/for%E5%92%8Cforeach%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>之前被问到过这样一个问题：for和foreach的性能差异是怎么样的。因此特意在本地做了有关for和foreach的性能对比。</p><a id="more"></a><p>主要从<strong>数组</strong>、<strong>链表</strong>这两种存储结构分析</p><p>数据量的选取为1w ,10w,100w,1000w</p><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> listSize_1w = <span class="number">10000</span>;</span><br><span class="line">        <span class="keyword">int</span> listSize_10w = <span class="number">100000</span>;</span><br><span class="line">        <span class="keyword">int</span> listSize_100w = <span class="number">1000000</span>;</span><br><span class="line">        <span class="keyword">int</span> listSize_1000w = <span class="number">10000000</span>;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; listSize_1w; i++) &#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> arrayForStartTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; listSize_1w; i++) &#123;</span><br><span class="line">            num = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> arrayForEndTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;用for循环arrayList花费的时间：&quot;</span> + (arrayForEndTime - arrayForStartTime) + <span class="string">&quot;毫秒&quot;</span>);</span><br><span class="line">        <span class="keyword">long</span> arrayForeachStartTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : list) &#123;</span><br><span class="line">            num = integer;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> arrayForeachEndTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;用foreach循环arrayList花费的时间：&quot;</span> + (arrayForeachEndTime - arrayForeachStartTime ) + <span class="string">&quot;毫秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a><strong>ArrayList</strong></h4><p><strong>数量级是1w</strong></p><p><code>用for循环arrayList花费的时间：1毫秒</code><br>        <code>用foreach循环arrayList花费的时间：1毫秒</code></p><p><strong>数量级是10w</strong></p><p><code>用for循环arrayList花费的时间：2毫秒</code><br>        <code>用foreach循环arrayList花费的时间：3毫秒</code></p><p><strong>数量级是100w</strong></p><p><code>用for循环arrayList花费的时间：11毫秒</code><br>        <code>用foreach循环arrayList花费的时间：10毫秒</code></p><p><strong>数量级是1000w</strong></p><p><code>用for循环arrayList花费的时间：54毫秒</code><br>        <code>用foreach循环arrayList花费的时间：38毫秒</code></p><h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h4><p><strong>数量级是1w</strong></p><p><code>用for循环arrayList花费的时间：73毫秒</code></p><p><code>用foreach循环arrayList花费的时间：2毫秒</code></p><p><strong>数量级是10w</strong></p><p><code>用for循环arrayList花费的时间：10331毫秒</code><br>        <code>用foreach循环arrayList花费的时间：3毫秒</code></p><p><strong>数量级是100w</strong></p><p>for循环的时间远大于foreach的时间</p><p><strong>数量级是1000w</strong></p><p>for循环的时间远大于foreach的时间</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>在数组类型中for和foreach都能让人接受，for的效率虽然相比与foreach要更低点，但两者仍然是相同数量级，考虑到从使用场景的灵活性看，for远胜于foreach</li><li>在链表结构中一定要使用foreach，因为在链表结构使用get获取数据的复杂会达到O(n*n)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 性能分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
